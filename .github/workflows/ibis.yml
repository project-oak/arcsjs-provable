name: Ibis

on: [push]

defaults:
 run:
  working-directory: ./ibis

jobs:
  test:
    name: Test using ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #, windows-latest]
        toolchain: ["cargo", "cargo wasi"]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install toolchain
      if: runner.toolchain == 'cargo wasi'
      run: cargo install cargo-wasi
    - name: Run tests ${{ runner.toolchain }}
      run: ${{ runner.toolchain }} test --locked --release --verbose
    - name: Run ignored tests ${{ runner.toolchain }}
      run: ${{ runner.toolchain }} test --locked --release --verbose -- --ignored

  build:
    name: Build using ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #, windows-latest]
        toolchain: ["cargo", "cargo wasi"]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build ${{ runner.toolchain }}
      run: ${{ runner.toolchain }} build --locked --release --verbose

  lint:
    name: Lint using ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install clippy
      run: rustup component add clippy
    - name: Clippy
      run: cargo clippy --all-features -- -D warnings
    - name: Install fmt
      run: rustup component add rustfmt
    - name: Format
      run: cargo fmt --all -- --check
